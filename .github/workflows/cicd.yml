name: CI/CD to Azure VMSS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure VMSS using Custom Script Extension
        run: |
          echo "üöÄ Triggering VMSS extension update with force-refresh..."
          az vmss extension set \
            --resource-group "${{ secrets.RESOURCE_GROUP }}" \
            --vmss-name "${{ secrets.VMSS_NAME }}" \
            --name customScript \
            --publisher Microsoft.Azure.Extensions \
            --version 2.0 \
            --settings '{
              "fileUris": ["${{ secrets.DEPLOY_SCRIPT_URL }}"],
              "commandToExecute": "bash Deploy.sh"
            }' \
            --force-update

      - name: ‚úÖ Verify VMSS deployment status
        run: |
          echo "üîç Verifying VMSS deployment status..."
          retries=10
          delay=15

          for ((i=1; i<=retries; i++)); do
            echo "üîÅ Attempt $i: Checking instance extension status..."

            STATUS=$(az vmss list-instances \
              --resource-group "${{ secrets.RESOURCE_GROUP }}" \
              --name "${{ secrets.VMSS_NAME }}" \
              --query "[].{id:instanceId, status: instanceView.extensions[?name=='customScript']|[0].statuses[0].displayStatus}" \
              --output tsv)

            echo "$STATUS"

            if echo "$STATUS" | grep -q "Provisioning succeeded"; then
              echo "‚úÖ All VMSS instances reported successful deployment."
              exit 0
            fi

            echo "‚è≥ Waiting $delay seconds before retrying..."
            sleep $delay
          done

          echo "‚ùå Deployment did not succeed on all instances after $retries retries."
          exit 1
